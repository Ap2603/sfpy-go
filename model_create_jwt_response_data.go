/*
Safepay API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateJWTResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateJWTResponseData{}

// CreateJWTResponseData struct for CreateJWTResponseData
type CreateJWTResponseData struct {
	Session *string `json:"session,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewCreateJWTResponseData instantiates a new CreateJWTResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateJWTResponseData() *CreateJWTResponseData {
	this := CreateJWTResponseData{}
	return &this
}

// NewCreateJWTResponseDataWithDefaults instantiates a new CreateJWTResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateJWTResponseDataWithDefaults() *CreateJWTResponseData {
	this := CreateJWTResponseData{}
	return &this
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *CreateJWTResponseData) GetSession() string {
	if o == nil || IsNil(o.Session) {
		var ret string
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJWTResponseData) GetSessionOk() (*string, bool) {
	if o == nil || IsNil(o.Session) {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *CreateJWTResponseData) HasSession() bool {
	if o != nil && !IsNil(o.Session) {
		return true
	}

	return false
}

// SetSession gets a reference to the given string and assigns it to the Session field.
func (o *CreateJWTResponseData) SetSession(v string) {
	o.Session = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CreateJWTResponseData) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJWTResponseData) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CreateJWTResponseData) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CreateJWTResponseData) SetToken(v string) {
	o.Token = &v
}

func (o CreateJWTResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateJWTResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Session) {
		toSerialize["session"] = o.Session
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableCreateJWTResponseData struct {
	value *CreateJWTResponseData
	isSet bool
}

func (v NullableCreateJWTResponseData) Get() *CreateJWTResponseData {
	return v.value
}

func (v *NullableCreateJWTResponseData) Set(val *CreateJWTResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateJWTResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateJWTResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateJWTResponseData(val *CreateJWTResponseData) *NullableCreateJWTResponseData {
	return &NullableCreateJWTResponseData{value: val, isSet: true}
}

func (v NullableCreateJWTResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateJWTResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


